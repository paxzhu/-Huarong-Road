{"ast":null,"code":"var _jsxFileName = \"/home/zpc/Code/MyProjects/Maze/src/App.js\",\n  _s = $RefreshSig$();\n// function getZeroByTenthOf(num) {\n//   return Math.random() * 10 <= num ? 0 : 1; // Generating 0 with probability of num/10\n// }\n\n// function createMaze(m, n) {\n//   let maze = [];\n//   for (let i = 0; i < m; i++) {\n//     let row = [];\n//     for (let j = 0; j < n; j++) {\n//       row.push(getZeroByTenthOf(8));\n//     }\n//     maze.push(row);\n//   }\n//   return maze;\n// }\n\n// function Square({num}) {\n//   let square = num === 0 ? \"square white\" : \"square black\";\n//   function handleClick() {\n\n//   }\n//   return <button className={square} onClick={handleClick}></button>\n// }\n\n// export default function Board() {\n//   let maze = createMaze(20, 20);\n//   let m = maze.length, n = maze[0].length;\n//   maze[0][0] = 0;\n//   maze[m-1][n-1] = 0;\n//   return (\n//     <div>\n//       {maze.map((line, index) => (\n//         <div className=\"board-row\">\n//           {line.map((num) => (\n//             <Square num={num} />\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet BOARD_W = 3;\nlet BOARD_H = 3;\nlet WIN_LEN = 3;\nfunction Square({\n  value,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i, j) {\n    if (squares[i][j] || calculateWinner(squares)) {\n      return;\n    }\n    const newSquares = Array(3).fill(null).map((_, i) => squares[i].slice());\n    newSquares[i][j] = xIsNext ? 'X' : 'O';\n    onPlay(newSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  status = xIsNext ? \"Next Player: X\" : \"Next Player:O\";\n  if (winner) {\n    status = \"Winner: \" + winner;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), squares.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: line.map((value, j) => /*#__PURE__*/_jsxDEV(Square, {\n        value: value,\n        onClick: () => handleClick(i, j)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(3).fill(null).map(() => Array(3).fill(null))]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 == 0;\n  const currentHistory = history[currentMove];\n  function handlePlay(newSquares) {\n    setCurrentMove(currentMove + 1);\n    setHistory([...history.slice(0, currentMove + 1), newSquares]);\n  }\n  function jumpTo(i) {\n    setCurrentMove(i);\n  }\n  const moves = history.map((_, move) => {\n    let description = \"Go to game start\";\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentHistory,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"po0jmGAh/9mQ6C801LiwL1Kl2Ck=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  function isWinner(i, j, shift) {\n    let step = 1;\n    const [x, y] = shift;\n    const boundary_i = i + x * (WIN_LEN - 1),\n      boundary_j = j + y * (WIN_LEN - 1);\n    if (boundary_i < 0 || boundary_i >= BOARD_H || boundary_j < 0 || boundary_j >= BOARD_W) return false;\n    for (step; step < WIN_LEN; step++) {\n      if (squares[i + x * step][j + y * step] != squares[i][j]) {\n        break;\n      }\n    }\n    return step === WIN_LEN;\n  }\n  for (let i = 0; i < squares.length; i++) {\n    for (let j = 0; j < squares[0].length; j++) {\n      if (squares[i][j]) {\n        if (isWinner(i, j, [0, 1]) || isWinner(i, j, [1, 0]) || isWinner(i, j, [1, 1]) || isWinner(i, j, [1, -1])) return squares[i][j];\n      }\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","BOARD_W","BOARD_H","WIN_LEN","Square","value","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","handleClick","i","j","calculateWinner","newSquares","Array","fill","map","_","slice","winner","status","line","_c2","Game","_s","history","setHistory","currentMove","setCurrentMove","currentHistory","handlePlay","jumpTo","moves","move","description","_c3","isWinner","shift","step","x","y","boundary_i","boundary_j","length","$RefreshReg$"],"sources":["/home/zpc/Code/MyProjects/Maze/src/App.js"],"sourcesContent":["// function getZeroByTenthOf(num) {\n//   return Math.random() * 10 <= num ? 0 : 1; // Generating 0 with probability of num/10\n// }\n\n// function createMaze(m, n) {\n//   let maze = [];\n//   for (let i = 0; i < m; i++) {\n//     let row = [];\n//     for (let j = 0; j < n; j++) {\n//       row.push(getZeroByTenthOf(8));\n//     }\n//     maze.push(row);\n//   }\n//   return maze;\n// }\n\n// function Square({num}) {\n//   let square = num === 0 ? \"square white\" : \"square black\";\n//   function handleClick() {\n\n//   }\n//   return <button className={square} onClick={handleClick}></button>\n// }\n\n// export default function Board() {\n//   let maze = createMaze(20, 20);\n//   let m = maze.length, n = maze[0].length;\n//   maze[0][0] = 0;\n//   maze[m-1][n-1] = 0;\n//   return (\n//     <div>\n//       {maze.map((line, index) => (\n//         <div className=\"board-row\">\n//           {line.map((num) => (\n//             <Square num={num} />\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n\nimport { useState } from \"react\";\n\nlet BOARD_W = 3;\nlet BOARD_H = 3;\nlet WIN_LEN = 3;\n\nfunction Square({value, onClick}) {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Board({xIsNext, squares, onPlay}) {\n  function handleClick(i, j) {\n    if(squares[i][j] || calculateWinner(squares)) {\n      return;\n    }\n    const newSquares = Array(3).fill(null).map((_, i) => squares[i].slice())\n    newSquares[i][j] = xIsNext ? 'X' : 'O'; \n    onPlay(newSquares);\n  }\n  const winner = calculateWinner(squares);\n  let status;\n  status = xIsNext ? \"Next Player: X\" : \"Next Player:O\";\n  if(winner) {\n    status = \"Winner: \" + winner;\n  }\n  return (\n    <div>\n      <h4>{status}</h4>\n      {squares.map((line, i) => (\n        <div className=\"board-row\">\n          {line.map( (value, j) => \n            <Square value={value} onClick={() => handleClick(i, j)}/>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n} \n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(3).fill(null).map(() => Array(3).fill(null))]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove%2 == 0;\n  const currentHistory = history[currentMove];\n  function handlePlay(newSquares) {\n    setCurrentMove(currentMove+1);\n    setHistory([...history.slice(0, currentMove+1), newSquares]);\n  }\n  function jumpTo(i) {\n    setCurrentMove(i);\n  }\n\n  const moves = history.map((_, move) => {\n    let description = \"Go to game start\";\n    if(move > 0) {\n      description = \"Go to move #\" + move;\n    }\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>\n          {description}\n        </button>\n      </li>\n    )\n  })\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext}  squares={currentHistory} onPlay={handlePlay}/>\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n      <div>\n        {[<></>]}\n      </div>\n    </div>\n  )\n}\n\n\nfunction calculateWinner(squares) {\n  function isWinner(i, j, shift) {\n    let step = 1;\n    const [x, y] = shift;\n    const boundary_i = i + x*(WIN_LEN-1), boundary_j = j + y*(WIN_LEN-1);\n    if(boundary_i < 0 || boundary_i >= BOARD_H || boundary_j < 0 || boundary_j >= BOARD_W)\n      return false; \n    for(step; step < WIN_LEN; step++) {\n      if(squares[i + x*step][j + y*step] != squares[i][j]) {\n        break;\n      }\n    }\n    return step === WIN_LEN;\n  }\n\n  for(let i = 0; i < squares.length; i++) {\n    for(let j = 0; j < squares[0].length; j++) {\n      if(squares[i][j]) {\n        if(isWinner(i, j, [0, 1]) || \n            isWinner(i, j, [1, 0]) || \n            isWinner(i, j, [1, 1]) || \n            isWinner(i, j, [1, -1]))\n          return squares[i][j];\n      }\n    }\n  }\n  return null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}