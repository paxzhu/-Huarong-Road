{"ast":null,"code":"var _jsxFileName = \"/home/zpc/Code/MyProjects/Huayongroad/src/App.js\",\n  _s = $RefreshSig$();\n// function reshape(array, m, n) {\n\n// }\n\n// function create_dest(m, n) {\n//   let dest = Array(m*n).fill(null).map((_, i) => i+1);\n//   dest = reshape(dest, m, n);\n//   dest[m*n-1] = 0;\n//   return dest;\n// }\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst M = 3;\nconst N = 3;\nfunction createDest(m, n) {\n  let dest = Array.from({\n    length: m\n  }, (_, i) => Array.from({\n    length: n\n  }, (_, j) => i * n + j + 1));\n  dest[m - 1][n - 1] = 0;\n  return dest;\n}\nfunction parity(puzzle) {\n  const m = puzzle.length,\n    n = puzzle[0].length;\n  let flatten = Array(m * n).fill(null).map((_, i) => puzzle[Math.floor(i / n)][i % n]);\n  let cnt = 0;\n  for (let i = 0; i < m * n; i++) {\n    for (let j = i + 1; j < m * n; j++) {\n      if (flatten[i] != 0 && flatten[j] != 0 && flatten[i] > flatten[j]) {\n        cnt += 1;\n      }\n    }\n  }\n  return cnt;\n}\nfunction shuffle(m, n) {\n  let shuffled = Array.from({\n    length: m * n\n  }, (_, i) => i);\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  let puzzle = Array.from({\n    length: m\n  }, (_, i) => shuffled.slice(i * n, (i + 1) * n));\n  parity(puzzle);\n  return puzzle;\n}\nfunction exchangeWithBlank(puzzle, i, j) {\n  const m = puzzle.length,\n    n = puzzle[0].length;\n  const neis = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  for (const [di, dj] of neis) {\n    let x = i + di,\n      y = j + dj;\n    if (x >= 0 && x < m && y >= 0 && y < n && puzzle[x][y] == 0) {\n      puzzle[x][y] = puzzle[i][j];\n      puzzle[i][j] = 0;\n    }\n  }\n}\nfunction Square({\n  value,\n  onClick\n}) {\n  if (value == 0) {\n    value = null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [squares, setSquares] = useState(shuffle(M, N));\n  const [steps, setSteps] = useState(0);\n  const dest = createDest(M, N);\n  function handleClick(i, j) {\n    if (isOver(squares, dest)) {\n      return;\n    }\n    const m = squares.length,\n      n = squares[0].length;\n    let newSquares = Array(m).fill(null).map((_, i) => squares[i].slice());\n    exchangeWithBlank(newSquares, i, j);\n    setSquares(newSquares);\n    setSteps(steps + 1);\n  }\n  let status = \"Current Steps: \" + steps;\n  if (isOver(squares, dest)) {\n    status = \"Finished by steps: \" + steps;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), squares.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: line.map((value, j) => /*#__PURE__*/_jsxDEV(Square, {\n        value: value,\n        onClick: () => handleClick(i, j)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"2heqYzTtsKTQudlkBsQOv45B76Y=\");\n_c2 = Board;\nfunction isOver(puzzle, dest) {\n  return JSON.stringify(puzzle) == JSON.stringify(dest);\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","M","N","createDest","m","n","dest","Array","from","length","_","i","j","parity","puzzle","flatten","fill","map","Math","floor","cnt","shuffle","shuffled","random","slice","exchangeWithBlank","neis","di","dj","x","y","Square","value","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","squares","setSquares","steps","setSteps","handleClick","isOver","newSquares","status","line","_c2","JSON","stringify","$RefreshReg$"],"sources":["/home/zpc/Code/MyProjects/Huayongroad/src/App.js"],"sourcesContent":["// function reshape(array, m, n) {\n\n// }\n\n// function create_dest(m, n) {\n//   let dest = Array(m*n).fill(null).map((_, i) => i+1);\n//   dest = reshape(dest, m, n);\n//   dest[m*n-1] = 0;\n//   return dest;\n// }\nimport { useState } from \"react\";\nconst M = 3;\nconst N = 3;\n\nfunction createDest(m, n) {\n  let dest = Array.from({ length: m }, (_, i) => Array.from({ length: n }, (_, j) => i * n + j + 1));\n  dest[m - 1][n - 1] = 0;\n  return dest;\n}\n\nfunction parity(puzzle) {\n  const m = puzzle.length, n = puzzle[0].length;\n  let flatten = Array(m*n).fill(null).map((_, i) => puzzle[Math.floor(i/n)][i%n]);\n  let cnt = 0;\n\n  for(let i = 0; i < m*n; i++) {\n    for(let j = i+1; j < m*n; j++) {\n      if(flatten[i] != 0 && flatten[j] != 0 && flatten[i] > flatten[j]) {\n        cnt += 1;\n      }\n    }\n  }\n  return cnt;\n}\n\nfunction shuffle(m, n) {\n  let shuffled = Array.from({ length: m * n }, (_, i) => i);\n  for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  let puzzle = Array.from({ length: m }, (_, i) => shuffled.slice(i * n, (i + 1) * n));\n  parity(puzzle);\n  return puzzle;\n}\n\nfunction exchangeWithBlank(puzzle, i, j) {\n  const m = puzzle.length, n = puzzle[0].length;\n  const neis = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  for(const [di, dj] of neis) {\n    let x = i+di, y = j+dj;\n    if(x >= 0 && x < m && y >= 0 && y < n && puzzle[x][y] == 0) {\n      puzzle[x][y] = puzzle[i][j];\n      puzzle[i][j] = 0;\n    }\n  }\n}\n\nfunction Square({value, onClick}) {\n  if(value == 0) {\n    value = null;\n  }\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default function Board() {\n  const [squares, setSquares] = useState(shuffle(M, N));\n  const [steps, setSteps] = useState(0);\n  const dest = createDest(M, N);\n  function handleClick(i, j) {\n    if(isOver(squares, dest)) {\n      return ;\n    }\n    const m = squares.length, n = squares[0].length;\n    let newSquares = Array(m).fill(null).map((_, i) => squares[i].slice());\n    exchangeWithBlank(newSquares, i, j);\n    setSquares(newSquares);\n    setSteps(steps + 1);\n  }\n  let status = \"Current Steps: \" + steps;\n  if(isOver(squares, dest)) {\n    status = \"Finished by steps: \" + steps;\n  }\n  \n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      {squares.map((line, i) => \n        <div className=\"board-row\">\n          {line.map((value, j) => \n            <Square value={value} onClick={() => handleClick(i, j)}/> )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction isOver(puzzle, dest) {\n  return JSON.stringify(puzzle) == JSON.stringify(dest);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}