{"ast":null,"code":"var _jsxFileName = \"/home/zpc/Code/MyProjects/Huayongroad/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { astar, shuffle, createDest } from \"./AStar\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction exchangeWithBlank(puzzle, i, j) {\n  const m = puzzle.length,\n    n = puzzle[0].length;\n  const neis = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  for (const [di, dj] of neis) {\n    let x = i + di,\n      y = j + dj;\n    if (x >= 0 && x < m && y >= 0 && y < n && puzzle[x][y] == 0) {\n      puzzle[x][y] = puzzle[i][j];\n      puzzle[i][j] = 0;\n    }\n  }\n}\nfunction Square({\n  value,\n  onClick\n}) {\n  if (value == 0) {\n    value = null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Options() {\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      children: \"3 X 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"#/action-1\",\n        children: \"3 X 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"#/action-2\",\n        children: \"4 X 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n        href: \"#/action-3\",\n        children: \"5 X 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Options;\nfunction Reference({\n  reference,\n  onClick\n}) {\n  let status = null;\n  if (reference) {\n    status = JSON.stringify(reference) + \", with steps: \" + reference.length;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Reference\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Reference;\nexport default function Board() {\n  _s();\n  const [size, setSize] = useState(3);\n  const [squares, setSquares] = useState(shuffle(size, size));\n  const [steps, setSteps] = useState(0);\n  const dest = createDest(size, size);\n  function handleClick(i, j) {\n    if (isOver(squares, dest)) {\n      return;\n    }\n    const m = squares.length,\n      n = squares[0].length;\n    let newSquares = Array(m).fill(null).map((_, i) => squares[i].slice());\n    exchangeWithBlank(newSquares, i, j);\n    setSquares(newSquares);\n    setSteps(steps + 1);\n  }\n  function handleOption(newSize) {\n    setSize(newSize);\n  }\n\n  // http request\n  const [reference, setReference] = useState(null);\n  const getReference = async puzzle => {\n    await fetch('http://127.0.0.1:5000/getReference', {\n      method: 'POST',\n      body: JSON.stringify({\n        puzzle: puzzle\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setReference(data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n  let status = \"Current Steps: \" + steps;\n  if (isOver(squares, dest)) {\n    status = \"Finished by steps: \" + steps;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: squares.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: line.map((value, j) => /*#__PURE__*/_jsxDEV(Square, {\n          value: value,\n          onClick: () => handleClick(i, j)\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Options, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"oXEQHmxP25Mbn3kReX79CoZWD2E=\");\n_c4 = Board;\nfunction isOver(puzzle, dest) {\n  return JSON.stringify(puzzle) == JSON.stringify(dest);\n}\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Options\");\n$RefreshReg$(_c3, \"Reference\");\n$RefreshReg$(_c4, \"Board\");","map":{"version":3,"names":["useState","astar","shuffle","createDest","Dropdown","jsxDEV","_jsxDEV","exchangeWithBlank","puzzle","i","j","m","length","n","neis","di","dj","x","y","Square","value","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Options","Toggle","variant","id","Menu","Item","href","_c2","Reference","reference","status","JSON","stringify","_c3","Board","_s","size","setSize","squares","setSquares","steps","setSteps","dest","handleClick","isOver","newSquares","Array","fill","map","_","slice","handleOption","newSize","setReference","getReference","fetch","method","body","headers","then","response","json","data","console","log","catch","err","message","line","_c4","$RefreshReg$"],"sources":["/home/zpc/Code/MyProjects/Huayongroad/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { astar, shuffle, createDest } from \"./AStar\";\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nfunction exchangeWithBlank(puzzle, i, j) {\n  const m = puzzle.length, n = puzzle[0].length;\n  const neis = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  for(const [di, dj] of neis) {\n    let x = i+di, y = j+dj;\n    if(x >= 0 && x < m && y >= 0 && y < n && puzzle[x][y] == 0) {\n      puzzle[x][y] = puzzle[i][j];\n      puzzle[i][j] = 0;\n    }\n  }\n}\n\nfunction Square({value, onClick}) {\n  if(value == 0) {\n    value = null;\n  }\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Options() {\n  return (\n    <Dropdown>\n      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        3 X 3\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <Dropdown.Item href=\"#/action-1\">3 X 3</Dropdown.Item>\n        <Dropdown.Item href=\"#/action-2\">4 X 4</Dropdown.Item>\n        <Dropdown.Item href=\"#/action-3\">5 X 5</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nfunction Reference({reference, onClick}) {\n  let status = null;\n  if(reference) {\n    status = JSON.stringify(reference)+ \", with steps: \" + reference.length ;\n  }\n  return (\n    <div className=\"status\">\n      <button onClick={onClick}>Reference</button>\n      <h4>{status}</h4>\n    </div>\n  );\n}\n\nexport default function Board() {\n  const [size, setSize] = useState(3);\n  const [squares, setSquares] = useState(shuffle(size, size));\n  const [steps, setSteps] = useState(0);\n  const dest = createDest(size, size);\n  function handleClick(i, j) {\n    if(isOver(squares, dest)) {\n      return ;\n    }\n    const m = squares.length, n = squares[0].length;\n    let newSquares = Array(m).fill(null).map((_, i) => squares[i].slice());\n    exchangeWithBlank(newSquares, i, j);\n    setSquares(newSquares);\n    setSteps(steps + 1);\n  }\n\n  function handleOption(newSize) {\n    setSize(newSize);\n  }\n\n  // http request\n  const [reference, setReference] = useState(null);\n  const getReference = async (puzzle) => {\n    await fetch('http://127.0.0.1:5000/getReference', {\n      method: 'POST',\n      body: JSON.stringify({\n          puzzle: puzzle,\n      }),\n      headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setReference(data);\n      })\n      .catch((err) => {\n          console.log(err.message);\n      });\n    };\n\n  let status = \"Current Steps: \" + steps;\n  if(isOver(squares, dest)) {\n    status = \"Finished by steps: \" + steps;\n  }\n  \n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      <div>\n        {squares.map((line, i) => \n          <div className=\"board-row\" key={i}>\n            {line.map((value, j) => \n              <Square value={value} onClick={() => handleClick(i, j)} key={j}/> )}\n          </div>\n        )}\n      </div>\n      <Options/>\n      {/* <Reference reference={reference} onClick={() => getReference(squares)}/> */}\n    </div>\n  );\n}\n\nfunction isOver(puzzle, dest) {\n  return JSON.stringify(puzzle) == JSON.stringify(dest);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}