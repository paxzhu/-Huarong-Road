{"ast":null,"code":"var _jsxFileName = \"/home/zpc/Code/MyProjects/Maze/src/App.js\",\n  _s = $RefreshSig$();\n// function reshape(array, m, n) {\n\n// }\n\n// function create_dest(m, n) {\n//   let dest = Array(m*n).fill(null).map((_, i) => i+1);\n//   dest = reshape(dest, m, n);\n//   dest[m*n-1] = 0;\n//   return dest;\n// }\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst M = 3;\nconst N = 3;\nfunction createDest(m, n) {\n  let dest = Array.from({\n    length: m\n  }, (_, i) => Array.from({\n    length: n\n  }, (_, j) => i * n + j + 1));\n  dest[m - 1][n - 1] = 0;\n  return dest;\n}\nfunction shuffle(m, n) {\n  let shuffled = Array.from({\n    length: m * n\n  }, (_, i) => i);\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return Array.from({\n    length: m\n  }, (_, i) => shuffled.slice(i * n, (i + 1) * n));\n}\nfunction astar(puzzle, dest) {\n  const manhattans = heuristic(dest);\n  const start = puzzle.map(row => row.slice());\n  const target = dest.map(row => row.slice());\n  const startTuple = start.map(row => row.slice());\n  const heap = [[manhattans(start), 0, startTuple]];\n  const visited = {};\n  visited[JSON.stringify(start)] = null;\n  while (heap.length > 0) {\n    const [evaluate, depth, status] = heap.shift();\n    if (JSON.stringify(status) === JSON.stringify(target)) {\n      break;\n    }\n    for (const nei of neighbors(status)) {\n      const strNei = JSON.stringify(nei);\n      if (!visited[strNei]) {\n        visited[strNei] = status;\n        heap.push([depth + 1 + manhattans(nei), depth + 1, nei]);\n      }\n    }\n    heap.sort((a, b) => a[0] - b[0]);\n  }\n  if (!visited[JSON.stringify(target)]) {\n    console.log(\"invalid puzzle\");\n    return null;\n  }\n  const path = traceToDest(visited, JSON.stringify(target));\n  return path.map(step => step.map(row => row.slice()));\n}\nfunction Square({\n  value,\n  onClick\n}) {\n  if (value == 0) {\n    value = null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [squares, setSquares] = useState(shuffle(M, N));\n  function handleClick(i, j) {\n    console.log(i, j);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: squares.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: line.map((value, j) => /*#__PURE__*/_jsxDEV(Square, {\n        value: value,\n        onClick: () => handleClick(i, j)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"ZdllxoxyMcFfDZlqaHxs4F6FOIU=\");\n_c2 = Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","M","N","createDest","m","n","dest","Array","from","length","_","i","j","shuffle","shuffled","Math","floor","random","slice","astar","puzzle","manhattans","heuristic","start","map","row","target","startTuple","heap","visited","JSON","stringify","evaluate","depth","status","shift","nei","neighbors","strNei","push","sort","a","b","console","log","path","traceToDest","step","Square","value","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","squares","setSquares","handleClick","line","_c2","$RefreshReg$"],"sources":["/home/zpc/Code/MyProjects/Maze/src/App.js"],"sourcesContent":["// function reshape(array, m, n) {\n\n// }\n\n// function create_dest(m, n) {\n//   let dest = Array(m*n).fill(null).map((_, i) => i+1);\n//   dest = reshape(dest, m, n);\n//   dest[m*n-1] = 0;\n//   return dest;\n// }\nimport { useState } from \"react\";\nconst M = 3;\nconst N = 3;\n\n\nfunction createDest(m, n) {\n  let dest = Array.from({ length: m }, (_, i) => Array.from({ length: n }, (_, j) => i * n + j + 1));\n  dest[m - 1][n - 1] = 0;\n  return dest;\n}\n\nfunction shuffle(m, n) {\n  let shuffled = Array.from({ length: m * n }, (_, i) => i);\n  for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return Array.from({ length: m }, (_, i) => shuffled.slice(i * n, (i + 1) * n));\n}\n\n\n\nfunction astar(puzzle, dest) {\n  const manhattans = heuristic(dest);\n  const start = puzzle.map(row => row.slice());\n  const target = dest.map(row => row.slice());\n  const startTuple = start.map(row => row.slice());\n  const heap = [[manhattans(start), 0, startTuple]];\n  const visited = {};\n  visited[JSON.stringify(start)] = null;\n\n  while (heap.length > 0) {\n      const [evaluate, depth, status] = heap.shift();\n      if (JSON.stringify(status) === JSON.stringify(target)) {\n          break;\n      }\n      for (const nei of neighbors(status)) {\n          const strNei = JSON.stringify(nei);\n          if (!visited[strNei]) {\n              visited[strNei] = status;\n              heap.push([depth + 1 + manhattans(nei), depth + 1, nei]);\n          }\n      }\n      heap.sort((a, b) => a[0] - b[0]);\n  }\n\n  if (!visited[JSON.stringify(target)]) {\n      console.log(\"invalid puzzle\");\n      return null;\n  }\n\n  const path = traceToDest(visited, JSON.stringify(target));\n  return path.map(step => step.map(row => row.slice()));\n}\n\nfunction Square({value, onClick}) {\n  if(value == 0) {\n    value = null;\n  }\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default function Board() {\n  const [squares, setSquares] = useState(shuffle(M, N));\n  function handleClick(i, j) {\n    console.log(i, j);\n\n  }\n  return (\n    <div>\n      {squares.map((line, i) => \n        <div className=\"board-row\">\n          {line.map((value, j) => \n            <Square value={value} onClick={() => handleClick(i, j)}/> )}\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}