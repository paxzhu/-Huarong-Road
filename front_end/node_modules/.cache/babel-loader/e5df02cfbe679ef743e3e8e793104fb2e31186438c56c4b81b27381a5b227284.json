{"ast":null,"code":"var _jsxFileName = \"/home/zpc/Code/MyProjects/Huayongroad/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { astar } from \"./AStar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst M = 3;\nconst N = 3;\nfunction createDest(m, n) {\n  let dest = Array.from({\n    length: m\n  }, (_, i) => Array.from({\n    length: n\n  }, (_, j) => i * n + j + 1));\n  dest[m - 1][n - 1] = 0;\n  return dest;\n}\nfunction parity(puzzle) {\n  const m = puzzle.length,\n    n = puzzle[0].length;\n  let flatten = Array(m * n).fill(null).map((_, i) => puzzle[Math.floor(i / n)][i % n]);\n  let cnt = 0,\n    pair;\n  for (let i = 0; i < m * n; i++) {\n    for (let j = i + 1; j < m * n; j++) {\n      if (flatten[i] != 0 && flatten[j] != 0 && flatten[i] > flatten[j]) {\n        cnt += 1;\n        pair = [i, j];\n      }\n    }\n  }\n  if (cnt % 2 == 1) {\n    let i = pair[0],\n      j = pair[1];\n    let tmp = puzzle[Math.floor(i / n)][i % n];\n    puzzle[Math.floor(i / n)][i % n] = puzzle[Math.floor(j / n)][j % n];\n    puzzle[Math.floor(j / n)][j % n] = tmp;\n  }\n}\nfunction shuffle(m, n) {\n  let shuffled = Array.from({\n    length: m * n\n  }, (_, i) => i);\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  let puzzle = Array.from({\n    length: m\n  }, (_, i) => shuffled.slice(i * n, (i + 1) * n));\n  parity(puzzle);\n  return puzzle;\n}\nfunction exchangeWithBlank(puzzle, i, j) {\n  const m = puzzle.length,\n    n = puzzle[0].length;\n  const neis = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  for (const [di, dj] of neis) {\n    let x = i + di,\n      y = j + dj;\n    if (x >= 0 && x < m && y >= 0 && y < n && puzzle[x][y] == 0) {\n      puzzle[x][y] = puzzle[i][j];\n      puzzle[i][j] = 0;\n    }\n  }\n}\nfunction Square({\n  value,\n  onClick\n}) {\n  if (value == 0) {\n    value = null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Reference({\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Reference\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Reference;\nexport default function Board() {\n  _s();\n  const [squares, setSquares] = useState(shuffle(M, N));\n  const [steps, setSteps] = useState(0);\n  const dest = createDest(M, N);\n  function handleClick(i, j) {\n    if (isOver(squares, dest)) {\n      return;\n    }\n    const m = squares.length,\n      n = squares[0].length;\n    let newSquares = Array(m).fill(null).map((_, i) => squares[i].slice());\n    exchangeWithBlank(newSquares, i, j);\n    setSquares(newSquares);\n    setSteps(steps + 1);\n  }\n  const [slides, setSlides] = useState(null);\n  function getSlides() {\n    const newSlides = astar(squares, dest);\n    setSlides(JSON.stringify(newSlides));\n  }\n  let status = \"Current Steps: \" + steps;\n  if (isOver(squares, dest)) {\n    status = \"Finished by steps: \" + steps;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: squares.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: line.map((value, j) => /*#__PURE__*/_jsxDEV(Square, {\n          value: value,\n          onClick: () => handleClick(i, j)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reference, {\n      onClick: getSlides\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {},\n        children: slides\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"47YutD9UdruH08UpErbsnuZDJBs=\");\n_c3 = Board;\nfunction isOver(puzzle, dest) {\n  return JSON.stringify(puzzle) == JSON.stringify(dest);\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Reference\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["useState","astar","jsxDEV","_jsxDEV","M","N","createDest","m","n","dest","Array","from","length","_","i","j","parity","puzzle","flatten","fill","map","Math","floor","cnt","pair","tmp","shuffle","shuffled","random","slice","exchangeWithBlank","neis","di","dj","x","y","Square","value","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Reference","_c2","Board","_s","squares","setSquares","steps","setSteps","handleClick","isOver","newSquares","slides","setSlides","getSlides","newSlides","JSON","stringify","status","line","style","_c3","$RefreshReg$"],"sources":["/home/zpc/Code/MyProjects/Huayongroad/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { astar } from \"./AStar\";\n\nconst M = 3;\nconst N = 3;\n\nfunction createDest(m, n) {\n  let dest = Array.from({ length: m }, (_, i) => Array.from({ length: n }, (_, j) => i * n + j + 1));\n  dest[m - 1][n - 1] = 0;\n  return dest;\n}\n\nfunction parity(puzzle) {\n  const m = puzzle.length, n = puzzle[0].length;\n  let flatten = Array(m*n).fill(null).map((_, i) => puzzle[Math.floor(i/n)][i%n]);\n  let cnt = 0, pair;\n\n  for(let i = 0; i < m*n; i++) {\n    for(let j = i+1; j < m*n; j++) {\n      if(flatten[i] != 0 && flatten[j] != 0 && flatten[i] > flatten[j]) {\n        cnt += 1;\n        pair = [i, j];\n      }\n    }\n  }\n\n  if(cnt % 2 == 1) {\n    let i = pair[0], j = pair[1];\n    let tmp = puzzle[Math.floor(i/n)][i%n];\n    puzzle[Math.floor(i/n)][i%n] = puzzle[Math.floor(j/n)][j%n];\n    puzzle[Math.floor(j/n)][j%n] = tmp;\n  }\n}\n\nfunction shuffle(m, n) {\n  let shuffled = Array.from({ length: m * n }, (_, i) => i);\n  for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  let puzzle = Array.from({ length: m }, (_, i) => shuffled.slice(i * n, (i + 1) * n));\n  parity(puzzle);\n  return puzzle;\n}\n\nfunction exchangeWithBlank(puzzle, i, j) {\n  const m = puzzle.length, n = puzzle[0].length;\n  const neis = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  for(const [di, dj] of neis) {\n    let x = i+di, y = j+dj;\n    if(x >= 0 && x < m && y >= 0 && y < n && puzzle[x][y] == 0) {\n      puzzle[x][y] = puzzle[i][j];\n      puzzle[i][j] = 0;\n    }\n  }\n}\n\nfunction Square({value, onClick}) {\n  if(value == 0) {\n    value = null;\n  }\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Reference({onClick}) {\n  return (\n    <div>\n      <h1></h1>\n      <button onClick={onClick}>\n        Reference\n      </button>\n    </div>\n  );\n}\n\nexport default function Board() {\n  const [squares, setSquares] = useState(shuffle(M, N));\n  const [steps, setSteps] = useState(0);\n  const dest = createDest(M, N);\n  function handleClick(i, j) {\n    if(isOver(squares, dest)) {\n      return ;\n    }\n    const m = squares.length, n = squares[0].length;\n    let newSquares = Array(m).fill(null).map((_, i) => squares[i].slice());\n    exchangeWithBlank(newSquares, i, j);\n    setSquares(newSquares);\n    setSteps(steps + 1);\n  }\n  const [slides, setSlides] = useState(null);\n  function getSlides() {\n    const newSlides = astar(squares, dest);\n    setSlides(JSON.stringify(newSlides));\n  }\n\n  let status = \"Current Steps: \" + steps;\n  if(isOver(squares, dest)) {\n    status = \"Finished by steps: \" + steps;\n  }\n  \n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      <div>\n        {squares.map((line, i) => \n          <div className=\"board-row\">\n            {line.map((value, j) => \n              <Square value={value} onClick={() => handleClick(i, j)}/> )}\n          </div>\n        )}\n      </div>\n      <Reference onClick={getSlides}/>\n      <div>\n        <h4 style={{}}>{slides}</h4>\n      </div>\n    </div>\n  );\n}\n\nfunction isOver(puzzle, dest) {\n  return JSON.stringify(puzzle) == JSON.stringify(dest);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}