{"ast":null,"code":"var _jsxFileName = \"/home/zpc/Code/MyProjects/Huayongroad/src/Posts.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n\n// const App = () => {\n//     const [posts, setPosts] = useState([]);\n//     useEffect(() => {\n//         fetch('http://127.0.0.1:5000/getShuffled')\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 console.log(data);\n//                 setPosts(data);\n//             })\n//             .catch((err) => console.log(err.message))\n//      }, []);\n\n//     return (\n//         <div className=\"posts-container\">\n//            {posts.map((post, i) => {\n//               return (\n//                  <div className=\"post-card\" key={i}>\n//                     <h2 className=\"post-title\">{post.title}</h2>\n//                     <p className=\"post-body\">{post.body}</p>\n//                     <div className=\"button\">\n//                     <div className=\"delete-btn\">Delete</div>\n//                     </div>\n//                  </div>\n//               );\n//            })}\n//         </div>\n//     );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // const [posts, setPosts] = useState([]);\n  const [, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  // ...\n  const addPosts = async (title, body) => {\n    await fetch('http://127.0.0.1:5000/reference', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: title,\n        body: body,\n        userId: Math.random().toString(36).slice(2)\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(data => {\n      // setPosts((posts) => [data, ...posts]);\n      setTitle('');\n      setBody('');\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    addPosts(title, body);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-post-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"\",\n          className: \"form-control\",\n          id: \"\",\n          cols: \"10\",\n          rows: \"8\",\n          value: body,\n          onChange: e => setBody(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"5QDlTQESDUFLMmoVlW8qXipzXHI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","setTitle","body","setBody","addPosts","title","fetch","method","JSON","stringify","userId","Math","random","toString","slice","headers","then","response","json","data","catch","err","console","log","message","handleSubmit","e","preventDefault","className","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","name","id","cols","rows","_c","$RefreshReg$"],"sources":["/home/zpc/Code/MyProjects/Huayongroad/src/Posts.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\n\n// const App = () => {\n//     const [posts, setPosts] = useState([]);\n//     useEffect(() => {\n//         fetch('http://127.0.0.1:5000/getShuffled')\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 console.log(data);\n//                 setPosts(data);\n//             })\n//             .catch((err) => console.log(err.message))\n//      }, []);\n     \n\n//     return (\n//         <div className=\"posts-container\">\n//            {posts.map((post, i) => {\n//               return (\n//                  <div className=\"post-card\" key={i}>\n//                     <h2 className=\"post-title\">{post.title}</h2>\n//                     <p className=\"post-body\">{post.body}</p>\n//                     <div className=\"button\">\n//                     <div className=\"delete-btn\">Delete</div>\n//                     </div>\n//                  </div>\n//               );\n//            })}\n//         </div>\n//     );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nconst App = () => {\n    // const [posts, setPosts] = useState([]);\n    const [, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    // ...\n    const addPosts = async (title, body) => {\n        await fetch('http://127.0.0.1:5000/reference', {\n            method: 'POST',\n            body: JSON.stringify({\n                title: title,\n                body: body,\n                userId: Math.random().toString(36).slice(2),\n            }),\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                // setPosts((posts) => [data, ...posts]);\n                setTitle('');\n                setBody('');\n            })\n            .catch((err) => {\n                console.log(err.message);\n            });\n        };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addPosts(title, body);\n    };    \n\n    return (\n        <div className=\"app\">\n            <div className=\"add-post-container\">\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" className=\"form-control\" value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    />\n                    <textarea name=\"\" className=\"form-control\" id=\"\" cols=\"10\" rows=\"8\" \n                    value={body} onChange={(e) => setBody(e.target.value)} \n                    ></textarea>\n                    <button type=\"submit\">Add Post</button>\n                </form>\n            </div>\n            {/* ... */}\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}