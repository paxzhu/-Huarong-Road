{"ast":null,"code":"function createDest(m, n) {\n  let dest = Array.from({\n    length: m\n  }, (_, i) => Array.from({\n    length: n\n  }, (_, j) => i * n + j + 1));\n  dest[m - 1][n - 1] = 0;\n  return dest;\n}\nfunction shuffle(m, n) {\n  let shuffled = Array.from({\n    length: m * n\n  }, (_, i) => i);\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return Array.from({\n    length: m\n  }, (_, i) => shuffled.slice(i * n, (i + 1) * n));\n}\nfunction heuristic(dest) {\n  const m = dest.length;\n  const n = dest[0].length;\n  const locs = Array.from({\n    length: m * n\n  }, () => [0, 0]);\n  for (let i = 0; i < m; i++) {\n    for (let j = 0; j < n; j++) {\n      locs[dest[i][j]] = [i, j];\n    }\n  }\n  function manhattans(puzzle) {\n    let distance = 0;\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        const [x, y] = locs[puzzle[i][j]];\n        const manhattan = Math.abs(x - i) + Math.abs(y - j);\n        distance += manhattan;\n      }\n    }\n    return distance;\n  }\n  return manhattans;\n}\nfunction locateZero(puzzle) {\n  for (let i = 0; i < puzzle.length; i++) {\n    for (let j = 0; j < puzzle[0].length; j++) {\n      if (puzzle[i][j] === 0) {\n        return [i, j];\n      }\n    }\n  }\n}\nfunction neighbors(status) {\n  const puzzle = status.map(row => row.slice());\n  const [i, j] = locateZero(puzzle);\n  const neis = [[1, 0], [-1, 0], [0, 1], [0, -1]];\n  const validNeighbors = [];\n  for (const [di, dj] of neis) {\n    const x = i + di;\n    const y = j + dj;\n    if (x >= 0 && x < puzzle.length && y >= 0 && y < puzzle[0].length) {\n      [puzzle[i][j], puzzle[x][y]] = [puzzle[x][y], puzzle[i][j]];\n      validNeighbors.push(puzzle.map(row => [row.slice(), puzzle[i][j]]));\n      [puzzle[i][j], puzzle[x][y]] = [puzzle[x][y], puzzle[i][j]];\n    }\n  }\n  return validNeighbors;\n}\nfunction traceToDest(visited, dest) {\n  const path = [dest];\n  const clicks = [];\n  while (visited[dest][0]) {\n    const pre_status = visited[dest][0];\n    const pre_click = visited[dest];\n    path.push(pre);\n    dest = pre;\n  }\n  return path.reverse();\n}\nexport function astar(puzzle, dest) {\n  const manhattans = heuristic(dest);\n  const start = puzzle.map(row => row.slice());\n  const target = dest.map(row => row.slice());\n  const startTuple = start.map(row => row.slice());\n  const heap = [[manhattans(start), 0, startTuple]];\n  const visited = {};\n  visited[JSON.stringify(start)] = [null, null];\n  while (heap.length > 0) {\n    const [evaluate, depth, status] = heap.shift();\n    if (JSON.stringify(status) === JSON.stringify(target)) {\n      break;\n    }\n    for (const [nei, block] of neighbors(status)) {\n      const strNei = JSON.stringify(nei);\n      if (!visited[strNei]) {\n        visited[strNei] = [status, block];\n        heap.push([depth + 1 + manhattans(nei), depth + 1, nei]);\n      }\n    }\n    heap.sort((a, b) => a[0] - b[0]);\n  }\n  if (!visited[JSON.stringify(target)]) {\n    console.log(\"invalid puzzle\");\n    return null;\n  }\n  const path = traceToDest(visited, JSON.stringify(target));\n  return path.map(step => step.map(row => row.slice()));\n}","map":{"version":3,"names":["createDest","m","n","dest","Array","from","length","_","i","j","shuffle","shuffled","Math","floor","random","slice","heuristic","locs","manhattans","puzzle","distance","x","y","manhattan","abs","locateZero","neighbors","status","map","row","neis","validNeighbors","di","dj","push","traceToDest","visited","path","clicks","pre_status","pre_click","pre","reverse","astar","start","target","startTuple","heap","JSON","stringify","evaluate","depth","shift","nei","block","strNei","sort","a","b","console","log","step"],"sources":["/home/zpc/Code/MyProjects/Huayongroad/src/AStar.js"],"sourcesContent":["function createDest(m, n) {\n    let dest = Array.from({ length: m }, (_, i) => Array.from({ length: n }, (_, j) => i * n + j + 1));\n    dest[m - 1][n - 1] = 0;\n    return dest;\n}\n\nfunction shuffle(m, n) {\n    let shuffled = Array.from({ length: m * n }, (_, i) => i);\n    for (let i = shuffled.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return Array.from({ length: m }, (_, i) => shuffled.slice(i * n, (i + 1) * n));\n}\n\nfunction heuristic(dest) {\n    const m = dest.length;\n    const n = dest[0].length;\n    const locs = Array.from({ length: m * n }, () => [0, 0]);\n    for (let i = 0; i < m; i++) {\n        for (let j = 0; j < n; j++) {\n            locs[dest[i][j]] = [i, j];\n        }\n    }\n    function manhattans(puzzle) {\n        let distance = 0;\n        for (let i = 0; i < m; i++) {\n            for (let j = 0; j < n; j++) {\n                const [x, y] = locs[puzzle[i][j]];\n                const manhattan = Math.abs(x - i) + Math.abs(y - j);\n                distance += manhattan;\n            }\n        }\n        return distance;\n    }\n    return manhattans;\n}\n\nfunction locateZero(puzzle) {\n    for (let i = 0; i < puzzle.length; i++) {\n        for (let j = 0; j < puzzle[0].length; j++) {\n            if (puzzle[i][j] === 0) {\n                return [i, j];\n            }\n        }\n    }\n}\n\nfunction neighbors(status) {\n    const puzzle = status.map(row => row.slice());\n    const [i, j] = locateZero(puzzle);\n    const neis = [[1, 0], [-1, 0], [0, 1], [0, -1]];\n    const validNeighbors = [];\n    for (const [di, dj] of neis) {\n        const x = i + di;\n        const y = j + dj;\n        if (x >= 0 && x < puzzle.length && y >= 0 && y < puzzle[0].length) {\n            [puzzle[i][j], puzzle[x][y]] = [puzzle[x][y], puzzle[i][j]];\n            validNeighbors.push(puzzle.map(row => [row.slice(), puzzle[i][j]]));\n            [puzzle[i][j], puzzle[x][y]] = [puzzle[x][y], puzzle[i][j]];\n        }\n    }\n    return validNeighbors;\n}\n\nfunction traceToDest(visited, dest) {\n    const path = [dest];\n    const clicks = [];\n    while (visited[dest][0]) {\n        const pre_status = visited[dest][0];\n        const pre_click = visited[dest]\n        path.push(pre);\n        dest = pre;\n    }\n    return path.reverse();\n}\n\nexport function astar(puzzle, dest) {\n    const manhattans = heuristic(dest);\n    const start = puzzle.map(row => row.slice());\n    const target = dest.map(row => row.slice());\n    const startTuple = start.map(row => row.slice());\n    const heap = [[manhattans(start), 0, startTuple]];\n    const visited = {};\n    visited[JSON.stringify(start)] = [null, null];\n\n    while (heap.length > 0) {\n        const [evaluate, depth, status] = heap.shift();\n        if (JSON.stringify(status) === JSON.stringify(target)) {\n            break;\n        }\n        for (const [nei, block] of neighbors(status)) {\n            const strNei = JSON.stringify(nei);\n            if (!visited[strNei]) {\n                visited[strNei] = [status, block];\n                heap.push([depth + 1 + manhattans(nei), depth + 1, nei]);\n            }\n        }\n        heap.sort((a, b) => a[0] - b[0]);\n    }\n\n    if (!visited[JSON.stringify(target)]) {\n        console.log(\"invalid puzzle\");\n        return null;\n    }\n\n    const path = traceToDest(visited, JSON.stringify(target));\n    return path.map(step => step.map(row => row.slice()));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}