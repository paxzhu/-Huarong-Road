{"ast":null,"code":"var _jsxFileName = \"/home/zpc/Code/MyProjects/Maze/src/App.js\",\n  _s = $RefreshSig$();\n// function getZeroByTenthOf(num) {\n//   return Math.random() * 10 <= num ? 0 : 1; // Generating 0 with probability of num/10\n// }\n\n// function createMaze(m, n) {\n//   let maze = [];\n//   for (let i = 0; i < m; i++) {\n//     let row = [];\n//     for (let j = 0; j < n; j++) {\n//       row.push(getZeroByTenthOf(8));\n//     }\n//     maze.push(row);\n//   }\n//   return maze;\n// }\n\n// function Square({num}) {\n//   let square = num === 0 ? \"square white\" : \"square black\";\n//   function handleClick() {\n\n//   }\n//   return <button className={square} onClick={handleClick}></button>\n// }\n\n// export default function Board() {\n//   let maze = createMaze(20, 20);\n//   let m = maze.length, n = maze[0].length;\n//   maze[0][0] = 0;\n//   maze[m-1][n-1] = 0;\n//   return (\n//     <div>\n//       {maze.map((line, index) => (\n//         <div className=\"board-row\">\n//           {line.map((num) => (\n//             <Square num={num} />\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mybutton({\n  count,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: true,\n    onClick: onClick,\n    children: [\"Clicked \", count, \" times\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = Mybutton;\nfunction MyApp() {\n  _s();\n  const [count, setCount] = useState(0);\n  function handleClick() {\n    setCount(count + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counters that update together\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Mybutton, {\n      count: count,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Mybutton, {\n      count: count,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(MyApp, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c2 = MyApp;\nexport default MyApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"Mybutton\");\n$RefreshReg$(_c2, \"MyApp\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Mybutton","count","onClick","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","MyApp","_s","setCount","handleClick","_c2","$RefreshReg$"],"sources":["/home/zpc/Code/MyProjects/Maze/src/App.js"],"sourcesContent":["// function getZeroByTenthOf(num) {\n//   return Math.random() * 10 <= num ? 0 : 1; // Generating 0 with probability of num/10\n// }\n\n// function createMaze(m, n) {\n//   let maze = [];\n//   for (let i = 0; i < m; i++) {\n//     let row = [];\n//     for (let j = 0; j < n; j++) {\n//       row.push(getZeroByTenthOf(8));\n//     }\n//     maze.push(row);\n//   }\n//   return maze;\n// }\n\n// function Square({num}) {\n//   let square = num === 0 ? \"square white\" : \"square black\";\n//   function handleClick() {\n\n//   }\n//   return <button className={square} onClick={handleClick}></button>\n// }\n\n// export default function Board() {\n//   let maze = createMaze(20, 20);\n//   let m = maze.length, n = maze[0].length;\n//   maze[0][0] = 0;\n//   maze[m-1][n-1] = 0;\n//   return (\n//     <div>\n//       {maze.map((line, index) => (\n//         <div className=\"board-row\">\n//           {line.map((num) => (\n//             <Square num={num} />\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\nimport { useState } from \"react\";\n\nfunction Mybutton({count, onClick}) {\n  return (\n    <button style onClick={onClick}>\n      Clicked {count} times\n    </button>\n  )\n}\n \nfunction MyApp() {\n  const [count, setCount] = useState(0);\n  function handleClick() {\n    setCount(count+1);\n  }\n  return (\n    <div>\n      <h1>Counters that update together</h1>\n      <Mybutton count={count} onClick={handleClick}/>\n      <Mybutton count={count} onClick={handleClick}/>\n    </div>\n  );\n}\n\nexport default MyApp;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAC;EAACC,KAAK;EAAEC;AAAO,CAAC,EAAE;EAClC,oBACEH,OAAA;IAAQI,KAAK;IAACD,OAAO,EAAEA,OAAQ;IAAAE,QAAA,GAAC,UACtB,EAACH,KAAK,EAAC,QACjB;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAACC,EAAA,GANQT,QAAQ;AAQjB,SAASU,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACV,KAAK,EAAEW,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrC,SAASgB,WAAWA,CAAA,EAAG;IACrBD,QAAQ,CAACX,KAAK,GAAC,CAAC,CAAC;EACnB;EACA,oBACEF,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCT,OAAA,CAACC,QAAQ;MAACC,KAAK,EAAEA,KAAM;MAACC,OAAO,EAAEW;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/CT,OAAA,CAACC,QAAQ;MAACC,KAAK,EAAEA,KAAM;MAACC,OAAO,EAAEW;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACG,EAAA,CAZQD,KAAK;AAAAI,GAAA,GAALJ,KAAK;AAcd,eAAeA,KAAK;AAAC,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}