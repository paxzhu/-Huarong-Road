{"ast":null,"code":"var _jsxFileName = \"/home/zpc/Code/MyProjects/Maze/src/App.js\",\n  _s = $RefreshSig$();\n// function reshape(array, m, n) {\n\n// }\n\n// function create_dest(m, n) {\n//   let dest = Array(m*n).fill(null).map((_, i) => i+1);\n//   dest = reshape(dest, m, n);\n//   dest[m*n-1] = 0;\n//   return dest;\n// }\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst M = 3;\nconst N = 3;\nfunction createDest(m, n) {\n  let dest = Array.from({\n    length: m\n  }, (_, i) => Array.from({\n    length: n\n  }, (_, j) => i * n + j + 1));\n  dest[m - 1][n - 1] = 0;\n  return dest;\n}\nfunction shuffle(m, n) {\n  let shuffled = Array.from({\n    length: m * n\n  }, (_, i) => i);\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return Array.from({\n    length: m\n  }, (_, i) => shuffled.slice(i * n, (i + 1) * n));\n}\nfunction exchangeWithBlank(puzzle, i, j) {\n  const m = puzzle.length,\n    n = puzzle[0].length;\n  const neis = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  for (const [di, dj] of neis) {\n    let x = i + di,\n      y = j + dj;\n    if (x >= 0 && x < m && y >= 0 && y < n && puzzle[x][y] == 0) {\n      puzzle[x][y] = puzzle[i][j];\n      puzzle[i][j] = 0;\n    }\n  }\n}\nfunction Square({\n  value,\n  onClick\n}) {\n  if (value == 0) {\n    value = null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [squares, setSquares] = useState(shuffle(M, N));\n  const [steps, setSteps] = useState(0);\n  const dest = createDest(M, N);\n  function handleClick(i, j) {\n    if (is) console.log(i, j);\n    const m = squares.length,\n      n = squares[0].length;\n    let newSquares = Array(m).fill(null).map((_, i) => squares[i].slice());\n    exchangeWithBlank(newSquares, i, j);\n    setSquares(newSquares);\n    setSteps(steps + 1);\n  }\n  let status = \"Current Steps: \" + steps;\n  if (isOver(squares, dest)) {\n    status = \"You've finished the puzzle by\" + steps;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), squares.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: line.map((value, j) => /*#__PURE__*/_jsxDEV(Square, {\n        value: value,\n        onClick: () => handleClick(i, j)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"2heqYzTtsKTQudlkBsQOv45B76Y=\");\n_c2 = Board;\nfunction isOver(puzzle, dest) {\n  return puzzle === dest;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","M","N","createDest","m","n","dest","Array","from","length","_","i","j","shuffle","shuffled","Math","floor","random","slice","exchangeWithBlank","puzzle","neis","di","dj","x","y","Square","value","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","squares","setSquares","steps","setSteps","handleClick","is","console","log","newSquares","fill","map","status","isOver","line","_c2","$RefreshReg$"],"sources":["/home/zpc/Code/MyProjects/Maze/src/App.js"],"sourcesContent":["// function reshape(array, m, n) {\n\n// }\n\n// function create_dest(m, n) {\n//   let dest = Array(m*n).fill(null).map((_, i) => i+1);\n//   dest = reshape(dest, m, n);\n//   dest[m*n-1] = 0;\n//   return dest;\n// }\nimport { useState } from \"react\";\nconst M = 3;\nconst N = 3;\n\n\nfunction createDest(m, n) {\n  let dest = Array.from({ length: m }, (_, i) => Array.from({ length: n }, (_, j) => i * n + j + 1));\n  dest[m - 1][n - 1] = 0;\n  return dest;\n}\n\nfunction shuffle(m, n) {\n  let shuffled = Array.from({ length: m * n }, (_, i) => i);\n  for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return Array.from({ length: m }, (_, i) => shuffled.slice(i * n, (i + 1) * n));\n}\n\nfunction exchangeWithBlank(puzzle, i, j) {\n  const m = puzzle.length, n = puzzle[0].length;\n  const neis = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  for(const [di, dj] of neis) {\n    let x = i+di, y = j+dj;\n    if(x >= 0 && x < m && y >= 0 && y < n && puzzle[x][y] == 0) {\n      puzzle[x][y] = puzzle[i][j];\n      puzzle[i][j] = 0;\n    }\n  }\n}\n\nfunction Square({value, onClick}) {\n  if(value == 0) {\n    value = null;\n  }\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default function Board() {\n  const [squares, setSquares] = useState(shuffle(M, N));\n  const [steps, setSteps] = useState(0);\n  const dest = createDest(M, N);\n  function handleClick(i, j) {\n    if(is)\n    console.log(i, j);\n    const m = squares.length, n = squares[0].length;\n    let newSquares = Array(m).fill(null).map((_, i) => squares[i].slice());\n    exchangeWithBlank(newSquares, i, j);\n    setSquares(newSquares);\n    setSteps(steps + 1);\n  }\n  let status = \"Current Steps: \" + steps;\n  if(isOver(squares, dest)) {\n    status = \"You've finished the puzzle by\" + steps;\n  }\n  \n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      {squares.map((line, i) => \n        <div className=\"board-row\">\n          {line.map((value, j) => \n            <Square value={value} onClick={() => handleClick(i, j)}/> )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction isOver(puzzle, dest) {\n  return puzzle === dest;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}