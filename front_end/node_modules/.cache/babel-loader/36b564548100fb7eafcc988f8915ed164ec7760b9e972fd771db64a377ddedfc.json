{"ast":null,"code":"var _jsxFileName = \"/home/zpc/Code/MyProjects/Huayongroad/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { astar, shuffle, createDest } from \"./AStar\";\nimport { Dropdown, Button, InputGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction exchangeWithBlank(puzzle, i, j) {\n  const m = puzzle.length,\n    n = puzzle[0].length;\n  const neis = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  for (const [di, dj] of neis) {\n    let x = i + di,\n      y = j + dj;\n    if (x >= 0 && x < m && y >= 0 && y < n && puzzle[x][y] == 0) {\n      puzzle[x][y] = puzzle[i][j];\n      puzzle[i][j] = 0;\n    }\n  }\n}\nfunction Square({\n  value,\n  onClick\n}) {\n  if (value == 0) {\n    value = null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Options({\n  selectedSize,\n  onOptionClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"form-floating mb-3 \",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      class: \"form-control\",\n      id: \"floatingInput\",\n      placeholder: \"name@example.com\",\n      value: size,\n      onChange: e => setSize()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"floatingInput\",\n      children: \"Size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Options;\nfunction Reset({\n  onResetClick\n}) {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: onResetClick,\n    children: \"Shuffle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n}\n_c3 = Reset;\nfunction Reference({\n  reference,\n  onClick\n}) {\n  let status = null;\n  if (reference) {\n    status = JSON.stringify(reference) + \", with steps: \" + reference.length;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: onClick,\n      children: \"Reference\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Reference;\nexport default function Board() {\n  _s();\n  const [size, setSize] = useState(3);\n  const [selectedSize, setSelectedSize] = useState(\"3 X 3\");\n  const dest = createDest(size, size);\n  const [squares, setSquares] = useState(dest);\n  const [steps, setSteps] = useState(0);\n  const [status, setStatus] = useState(\"Target As Fallows\");\n  function handleClick(i, j) {\n    if (isOver(squares, dest)) {\n      return;\n    }\n    const m = squares.length,\n      n = squares[0].length;\n    let newSquares = Array(m).fill(null).map((_, i) => squares[i].slice());\n    let newSteps = steps + 1;\n    let newStatus = \"Current Steps: \" + newSteps;\n    exchangeWithBlank(newSquares, i, j);\n    setSquares(newSquares);\n    setSteps(newSteps);\n    if (isOver(squares, dest)) {\n      newStatus = \"Finished by steps: \" + newSteps;\n    }\n    setStatus(newStatus);\n  }\n  function handleOptions(newSize) {\n    console.log(newSize);\n    const dest = createDest(newSize, newSize);\n    setStatus(\"Target As Fallows\");\n    setSquares(dest);\n    setSelectedSize(`${newSize} X ${newSize}`);\n    setSize(newSize);\n  }\n  function handleResetClick() {\n    const shuffled = shuffle(size, size);\n    setSteps(0);\n    setStatus(\"Current Steps: 0\");\n    setSquares(shuffled);\n  }\n  // http request\n  const [reference, setReference] = useState(null);\n  const getReference = async puzzle => {\n    await fetch('http://127.0.0.1:5000/getReference', {\n      method: 'POST',\n      body: JSON.stringify({\n        puzzle: puzzle\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setReference(data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container justify-content-center \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"align-items-center\",\n      children: squares.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row \",\n        children: line.map((value, j) => /*#__PURE__*/_jsxDEV(Square, {\n          value: value,\n          onClick: () => handleClick(i, j)\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Options, {\n      selectedSize: selectedSize,\n      onOptionClick: handleOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      onResetClick: handleResetClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reference, {\n      reference: reference,\n      onClick: () => getReference(squares)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"cZm7xbA9IR0TSmeGwoEHgqohfBw=\");\n_c5 = Board;\nfunction isOver(puzzle, dest) {\n  return JSON.stringify(puzzle) == JSON.stringify(dest);\n}\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Options\");\n$RefreshReg$(_c3, \"Reset\");\n$RefreshReg$(_c4, \"Reference\");\n$RefreshReg$(_c5, \"Board\");","map":{"version":3,"names":["useState","astar","shuffle","createDest","Dropdown","Button","InputGroup","jsxDEV","_jsxDEV","exchangeWithBlank","puzzle","i","j","m","length","n","neis","di","dj","x","y","Square","value","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Options","selectedSize","onOptionClick","class","type","id","placeholder","size","onChange","e","setSize","for","_c2","Reset","onResetClick","_c3","Reference","reference","status","JSON","stringify","_c4","Board","_s","setSelectedSize","dest","squares","setSquares","steps","setSteps","setStatus","handleClick","isOver","newSquares","Array","fill","map","_","slice","newSteps","newStatus","handleOptions","newSize","console","log","handleResetClick","shuffled","setReference","getReference","fetch","method","body","headers","then","response","json","data","catch","err","message","line","_c5","$RefreshReg$"],"sources":["/home/zpc/Code/MyProjects/Huayongroad/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { astar, shuffle, createDest } from \"./AStar\";\nimport { Dropdown, Button, InputGroup } from 'react-bootstrap';\n\nfunction exchangeWithBlank(puzzle, i, j) {\n  const m = puzzle.length, n = puzzle[0].length;\n  const neis = [[0, 1], [1, 0], [0, -1], [-1, 0]];\n  for(const [di, dj] of neis) {\n    let x = i+di, y = j+dj;\n    if(x >= 0 && x < m && y >= 0 && y < n && puzzle[x][y] == 0) {\n      puzzle[x][y] = puzzle[i][j];\n      puzzle[i][j] = 0;\n    }\n  }\n}\n\nfunction Square({value, onClick}) {\n  if(value == 0) {\n    value = null;\n  }\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction Options({selectedSize, onOptionClick}) {\n  return (\n    <div class=\"form-floating mb-3 \">\n      <input \n      type=\"email\" \n      class=\"form-control\" \n      id=\"floatingInput\" \n      placeholder=\"name@example.com\" \n      value={size}\n      onChange={(e) => setSize()}\n      />\n      <label for=\"floatingInput\">Size</label>\n    </div>\n  );\n}\n\nfunction Reset({onResetClick}) {\n  return <Button onClick={onResetClick}>Shuffle</Button>\n}\n\nfunction Reference({reference, onClick}) {\n  let status = null;\n  if(reference) {\n    status = JSON.stringify(reference)+ \", with steps: \" + reference.length ;\n  }\n  return (\n    <div className=\"status\">\n      <Button onClick={onClick}>Reference</Button>\n      <h4>{status}</h4>\n    </div>\n  );\n}\n\nexport default function Board() {\n  const [size, setSize] = useState(3);\n  const [selectedSize, setSelectedSize] = useState(\"3 X 3\");\n  const dest = createDest(size, size);\n  const [squares, setSquares] = useState(dest);\n  const [steps, setSteps] = useState(0);\n  const [status, setStatus] = useState(\"Target As Fallows\");\n  function handleClick(i, j) {\n    if(isOver(squares, dest)) {\n      return ;\n    }\n    const m = squares.length, n = squares[0].length;\n    let newSquares = Array(m).fill(null).map((_, i) => squares[i].slice());\n    let newSteps = steps + 1;\n    let newStatus = \"Current Steps: \" + newSteps;\n    exchangeWithBlank(newSquares, i, j);\n    setSquares(newSquares);\n    setSteps(newSteps);\n    if(isOver(squares, dest)) {\n      newStatus = \"Finished by steps: \" + newSteps;\n    }\n    setStatus(newStatus);\n  }\n\n  function handleOptions(newSize) {\n    console.log(newSize);\n    const dest = createDest(newSize, newSize);\n    setStatus(\"Target As Fallows\");\n    setSquares(dest);\n    setSelectedSize(`${newSize} X ${newSize}`);\n    setSize(newSize);\n  }\n\n  function handleResetClick() {\n    const shuffled = shuffle(size, size);\n    setSteps(0);\n    setStatus(\"Current Steps: 0\");\n    setSquares(shuffled);\n  }\n  // http request\n  const [reference, setReference] = useState(null);\n  const getReference = async (puzzle) => {\n    await fetch('http://127.0.0.1:5000/getReference', {\n      method: 'POST',\n      body: JSON.stringify({\n          puzzle: puzzle,\n      }),\n      headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        setReference(data);\n      })\n      .catch((err) => {\n          console.log(err.message);\n      });\n    };\n\n  return (\n    <div class=\"container justify-content-center \">\n      <div className=\"status\">{status}</div>\n      <div class=\"align-items-center\" >\n        {squares.map((line, i) => \n          <div className=\"board-row \" key={i}>\n            {line.map((value, j) => \n              <Square value={value} onClick={() => handleClick(i, j)} key={j}/> )}\n          </div>\n        )}\n      </div>\n      <Options selectedSize={selectedSize} onOptionClick={handleOptions}/>\n      <Reset onResetClick={handleResetClick}/>\n      <Reference reference={reference} onClick={() => getReference(squares)}/>\n    </div>\n  );\n}\n\nfunction isOver(puzzle, dest) {\n  return JSON.stringify(puzzle) == JSON.stringify(dest);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}